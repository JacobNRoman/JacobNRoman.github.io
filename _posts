---
layout: post
published: true
title: Stepping Into the Deep End
categories:
  - personal
mathjax: false
featured: false
comments: false
description: The First Blog Post
---
Stepping Into the Deep End
==========================

The First Blog Post
-------------------

I nearly drowned when I was five. I was at a public pool, and I couldn't yet swim, and another kid launched into me from behind and knocked me deep under. My lungs filled with water, I couldn't float, couldn't find purchase on the pool floor. I was blacking out when the lifeguard finally noticed me. 

I remember thinking, "Huh, well that's it then?". 

That wasn't it, though. I was rescued and unharmed. 

When I was twenty-three I signed up for swim-lessons to at last conquer my hydrophobia. This took a considerable swallowing of pride, dipping into a pool and splashing about while pre-schoolers dolphined by me. *whizz* they went. *gurgleSplashSputter* I cheerfully responded. 

I'll never forget what it felt like to swim out to the deep end for the first time in eighteen years. I can't forget it because it never quite went away. Triumph, miraculous and unexpected: part of me never believed I'd be able to do it. But also something else: A deep knowing, a knot in my stomach that told me the ten yards beneath me might as well be the Mariana Trench. That at any moment I could sink like a stone and then that would be it.

The panic would settle into my muscles and threatened to seize them, and I'd have to wrestle to keep myself afloat. One stroke, then the next. One breath, then another. 

Despite a couple close calls, I always made it to the end of the pool. 

At twenty-nine I started my journey to become a developer. It's been a year now, and I've learned more in the last year than I think I have at any other point in my life. I've gone from the very basics of programming to designing and writing robust web appications. More importantly, I've learned a confidence in my new role and skillset, learned that with enough time and effort I can find the answer to almost any problem. 

But I'm at a crossroads. I've completed [a program](https://www.launchcode.org/summerofcode), and a major project, and I'm in search of apprenticeships. I'm managing multiple new projects and am honing my skills. I'm networking and building my resume. 

But I'm still new. I still haven't had my first real job in tech. This is a condition so many new devs, especially self-taught/non-traditional devs find themselves in. Entire blogs are written about it. It's a strange feeling, but a familiar one. 

It's the thrill of reaching the deep end. It's the knot in your stomach that says *you'll sink*. 

The answer, of course, is to take a  breath, and focus on the next stroke. 

That's what this diary is for. To help focus, and reflect, to celebrate achievements (and failures!). To learn, and grow, and keep moving forward. And to help me to always breathe, and take the next step. 

So, in that spirit, lets talk about

How I Built This Blog
---------------------

I knew that I wanted something I could host on Github Pages, something that was customizable but wouldn't require a ton of maintenance. A cursory search led me to discovering Jekyll, a static web-site generator based out of Ruby. Jekyll is designed with with an awareness towards the tools need for blogging, and is designed to create lightweight, blazing fast websites since it only serves up static content (which is all I need for a blog anyway). As a nice bonus, you don't need a database!

I have never worked with Ruby before, so I had to set up a new environment. I've learned to dread setting up environments: when assignments and project deadlines are looming there is nothing that causes me more anxiety that being hung up on language installation problems. Pleasantly, Ruby was a breeze to install compared to some of my past experiences *cough* *cough* JDK *hack* Gradle *ahem* so sorry something caught in my throat. 

Ruby has some amazing install tools and it only took a few minutes of spinning in my office chair waiting for packages to download before I was ready to work.

One advantage of Jekyll is there are a solid number of premade themes, so I found [a nice one](https://github.com/hmfaysal/Notepad), forked it, renamed it, and started customizing. 

And this, I must tell you, was first up close and personal encounter with Real CSS In the Wild. Don't get me wrong, I've written plenty of CSS styles, implemented Bootstrap themes, and felt awfully proud of myself. But here I was staring down the gullet of a thousand lines of CSS that I did not write, connected to three layouts and a half dozen html pages, and parsing it to the extent that I could shape it the way I wanted took several hours of head-scratching, reading, re-reading, and good old trial and error. God bless the Inspector tool. 

But by the end I was beginning to suss out the logic, the structure, and was making sharp guesses that lead me pretty quickly to modifying what I wanted. As it stands, my theme is about ninety-percent where I want it to be. There's still some little fixes to be made, but I feel proud of it, and am less intimidated by large CSS files.  To more experienced webdevs I'm sure this is trivial, an everyday sort of thing.  But for me, it was a sharp plunge into the deep end. 

*whizz* they go.
*gurglesplashsputter* I cheerfully respond. 